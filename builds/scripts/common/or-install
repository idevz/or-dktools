#!/usr/bin/env bash

### BEGIN ###
# Author: idevz
# Since: 2018/03/12
# Description:       install systemtap.
#	User input a build type, program will do the building things:
#	like:
# ./bp.sh bt                             building testing docker image
# ./bp.sh tti                            show image info  ./bp.sh tti
# GOLANG_VERSION=1.9 ./bp.sh bt         build both rpm and docker images with golang 1.9(default)"
### END ###

set -ex
[ -z ${BASE_DIR} ] && echo "This script can not run independently ." && exit 1

DEFAULT_CENTOS_VERSION=7
DEFAULT_RESTY_VERSION="1.13.6.2"
DEFAULT_RESTY_LUAROCKS_VERSION="2.4.3"
DEFAULT_RESTY_OPENSSL_VERSION="1.0.2k"
DEFAULT_RESTY_PCRE_VERSION="8.41"
DEFAULT_RESTY_ZLIB_VERSION="1.2.11"
DEFAULT_LUAJIT_VERSION="2.1.0-beta3"
DEFAULT_RESTY_J="1"

OR_PREFIX=/usr/local/openresty
DEBUG_OR_PREFIX=/usr/local/openresty-debug
VAL_OR_PREFIX=/usr/local/openresty-valgrind
DEFAULT_LUAJIT_PREFIX=/usr/local/luajit

CENTOS_IMAGE=centos:${CV=$DEFAULT_CENTOS_VERSION}
RESTY_VERSION=${RESTY_VERSION=$DEFAULT_RESTY_VERSION}
RESTY_LUAROCKS_VERSION=${RESTY_LUAROCKS_VERSION=$DEFAULT_RESTY_LUAROCKS_VERSION}
RESTY_OPENSSL_VERSION=${RESTY_OPENSSL_VERSION=$DEFAULT_RESTY_OPENSSL_VERSION}
RESTY_PCRE_VERSION=${RESTY_PCRE_VERSION=$DEFAULT_RESTY_PCRE_VERSION}
RESTY_ZLIB_VERSION=${RESTY_ZLIB_VERSION=$DEFAULT_RESTY_ZLIB_VERSION}
RESTY_J=${RESTY_J=$DEFAULT_RESTY_J}
_RESTY_CONFIG_DEPS="--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}"
RESTY_CONFIG_OPTIONS_MORE=""

pkg_preparing() {
	cd /tmp &&
		curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz &&
		tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz &&
		curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz &&
		tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz &&
		curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz &&
		tar xzf openresty-${RESTY_VERSION}.tar.gz &&
		curl -fSL https://github.com/luarocks/luarocks/archive/${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz &&
		tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz
}

# RUN curl http://foo.com/package.tar.bz2 \
#     | tar -xjC /tmp/package \
#     && make -C /tmp/package

local_pkg_preparing() {
	cd /tmp &&
		kcopy "pkgs/openssl-${RESTY_OPENSSL_VERSION}.tar.gz" openssl-${RESTY_OPENSSL_VERSION}.tar.gz &&
		kcopy "pkgs/pcre-${RESTY_PCRE_VERSION}.tar.gz" pcre-${RESTY_PCRE_VERSION}.tar.gz &&
		kcopy "pkgs/openresty-${RESTY_VERSION}.tar.gz" openresty-${RESTY_VERSION}.tar.gz &&
		kcopy "pkgs/zlib-${RESTY_ZLIB_VERSION}.tar.gz" zlib-${RESTY_ZLIB_VERSION}.tar.gz &&
		kcopy "pkgs/luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz" luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz &&
		tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz &&
		tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz &&
		tar xzf openresty-${RESTY_VERSION}.tar.gz &&
		tar xzf zlib-${RESTY_ZLIB_VERSION}.tar.gz &&
		tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz
}

dev_preparing() {
	ZLIB_PREFIX=${DEBUG_OR_PREFIX}/zlib
	cd /tmp/zlib-${RESTY_ZLIB_VERSION} &&
		./configure --prefix=${ZLIB_PREFIX} &&
		make CFLAGS='-O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -g' \
			SFLAGS='-O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -g' &&
		make install

	OPENSSL_PREFIX=${DEBUG_OR_PREFIX}/openssl
	cd /tmp/openssl-${RESTY_OPENSSL_VERSION} &&
		./config \
			no-threads no-asm \
			enable-ssl3 enable-ssl3-method \
			shared zlib -g -O0 -DPURIFY \
			--prefix=${OPENSSL_PREFIX} \
			--libdir=lib \
			-I${ZLIB_PREFIX}/include \
			-L${ZLIB_PREFIX}/lib \
			-Wl,-rpath,${ZLIB_PREFIX}/lib:${OPENSSL_PREFIX}/lib &&
		sed -i 's/ -O3 / -O0 /g' Makefile &&
		make &&
		make install_sw

	PCRE_PREFIX=${DEBUG_OR_PREFIX}/pcre
	cd /tmp/pcre-${RESTY_PCRE_VERSION} &&
		./configure \
			--prefix=${PCRE_PREFIX} \
			--includedir=${PCRE_PREFIX}/include \
			--disable-cpp \
			--enable-jit \
			--enable-utf \
			--enable-unicode-properties &&
		make V=1 &&
		make install
}

install_default_luajit() {
	cd /tmp &&
		kcopy "pkgs/LuaJIT-${DEFAULT_LUAJIT_VERSION}.tar.gz" LuaJIT-${DEFAULT_LUAJIT_VERSION}.tar.gz &&
		tar xzf LuaJIT-${DEFAULT_LUAJIT_VERSION}.tar.gz
	cd /tmp/LuaJIT-${DEFAULT_LUAJIT_VERSION} &&
		make PREFIX=${DEFAULT_LUAJIT_PREFIX} &&
		make install PREFIX=${DEFAULT_LUAJIT_PREFIX}
}

or_for_debug() {
	dev_preparing

	cd /tmp/openresty-${RESTY_VERSION} &&
		./configure \
			--prefix=${DEBUG_OR_PREFIX} \
			-j${RESTY_J} \
			--with-debug \
			--with-no-pool-patch \
			--with-cc-opt="-I${ZLIB_PREFIX}/include -I${PCRE_PREFIX}/include -I${OPENSSL_PREFIX}/include -O0" \
			--with-ld-opt="-L${ZLIB_PREFIX}/lib -L${PCRE_PREFIX}/lib -L${OPENSSL_PREFIX}/lib -Wl,-rpath,${ZLIB_PREFIX}/lib:${PCRE_PREFIX}/lib:${OPENSSL_PREFIX}/lib" \
			--with-pcre-jit \
			--with-luajit-xcflags='-DLUAJIT_NUMMODE=2 -DLUAJIT_ENABLE_LUA52COMPAT -O0' \
			--with-dtrace-probes \
			--with-poll_module \
			--with-file-aio \
			--with-http_addition_module \
			--with-http_auth_request_module \
			--with-http_dav_module \
			--with-http_flv_module \
			--with-http_geoip_module=dynamic \
			--with-http_gunzip_module \
			--with-http_gzip_static_module \
			--with-http_image_filter_module=dynamic \
			--with-http_mp4_module \
			--with-http_random_index_module \
			--with-http_realip_module \
			--with-http_secure_link_module \
			--with-http_slice_module \
			--with-http_ssl_module \
			--with-http_stub_status_module \
			--with-http_sub_module \
			--with-http_v2_module \
			--with-http_xslt_module=dynamic \
			--with-ipv6 \
			--with-mail \
			--with-mail_ssl_module \
			--with-md5-asm \
			--with-sha1-asm \
			--with-stream \
			--with-stream_ssl_module \
			--with-threads \
			${RESTY_CONFIG_OPTIONS_MORE} &&
		make -j${RESTY_J} &&
		make -j${RESTY_J} install
}

or_for_valgrind() {
	yum install -y valgrind-devel

	dev_preparing

	install_default_luajit

	cd /tmp/openresty-${RESTY_VERSION} &&
		./configure \
			--prefix=${VAL_OR_PREFIX} \
			-j${RESTY_J} \
			--with-debug \
			--with-no-pool-patch \
			--with-cc-opt="-I${ZLIB_PREFIX}/include -I${PCRE_PREFIX}/include -I${OPENSSL_PREFIX}/include -O0" \
			--with-ld-opt="-L${ZLIB_PREFIX}/lib -L${PCRE_PREFIX}/lib -L${OPENSSL_PREFIX}/lib -Wl,-rpath,${ZLIB_PREFIX}/lib:${PCRE_PREFIX}/lib:${OPENSSL_PREFIX}/lib" \
			--with-pcre-jit \
			--with-luajit-xcflags='-DLUAJIT_NUMMODE=2 -DLUAJIT_ENABLE_LUA52COMPAT -DLUAJIT_USE_VALGRIND -DLUAJIT_USE_SYSMALLOC -O0' \
			--with-dtrace-probes \
			--with-poll_module \
			--with-file-aio \
			--with-http_addition_module \
			--with-http_auth_request_module \
			--with-http_dav_module \
			--with-http_flv_module \
			--with-http_geoip_module=dynamic \
			--with-http_gunzip_module \
			--with-http_gzip_static_module \
			--with-http_image_filter_module=dynamic \
			--with-http_mp4_module \
			--with-http_random_index_module \
			--with-http_realip_module \
			--with-http_secure_link_module \
			--with-http_slice_module \
			--with-http_ssl_module \
			--with-http_stub_status_module \
			--with-http_sub_module \
			--with-http_v2_module \
			--with-http_xslt_module=dynamic \
			--with-ipv6 \
			--with-mail \
			--with-mail_ssl_module \
			--with-md5-asm \
			--with-sha1-asm \
			--with-stream \
			--with-stream_ssl_module \
			--with-threads \
			${RESTY_CONFIG_OPTIONS_MORE} &&
		make -j${RESTY_J} &&
		make -j${RESTY_J} install
}

or_for_prd() {
	cd /tmp/openresty-${RESTY_VERSION} &&
		./configure \
			--prefix=${OR_PREFIX} \
			-j${RESTY_J} ${_RESTY_CONFIG_DEPS} \
			--with-file-aio \
			--with-http_addition_module \
			--with-http_auth_request_module \
			--with-http_dav_module \
			--with-http_flv_module \
			--with-http_geoip_module=dynamic \
			--with-http_gunzip_module \
			--with-http_gzip_static_module \
			--with-http_image_filter_module=dynamic \
			--with-http_mp4_module \
			--with-http_random_index_module \
			--with-http_realip_module \
			--with-http_secure_link_module \
			--with-http_slice_module \
			--with-http_ssl_module \
			--with-http_stub_status_module \
			--with-http_sub_module \
			--with-http_v2_module \
			--with-http_xslt_module=dynamic \
			--with-ipv6 \
			--with-mail \
			--with-mail_ssl_module \
			--with-md5-asm \
			--with-pcre-jit \
			--with-sha1-asm \
			--with-stream \
			--with-stream_ssl_module \
			--with-threads \
			${RESTY_CONFIG_OPTIONS_MORE} &&
		make -j${RESTY_J} &&
		make -j${RESTY_J} install
}

install_luarocks() {
	X_LUAJIT_PREFIX=${OR_PREFIX}/luajit
	if [ "${OR_ENV}" == "debug" ]; then
		X_LUAJIT_PREFIX=${DEBUG_OR_PREFIX}/luajit
	elif [ "${OR_ENV}" == "valgrind" ]; then
		X_LUAJIT_PREFIX=${DEFAULT_LUAJIT_PREFIX}
	fi
	cd /tmp/luarocks-${RESTY_LUAROCKS_VERSION} &&
		./configure \
			--prefix=${X_LUAJIT_PREFIX} \
			--with-lua=${X_LUAJIT_PREFIX} \
			--lua-suffix=jit-2.1.0-beta3 \
			--with-lua-include=${X_LUAJIT_PREFIX}/include/luajit-2.1 &&
		make build &&
		make install
}

pkg_clean() {
	if [ "${OR_ENV}" != "debug" ]; then
		cd /tmp &&
			rm -rf \
				openssl-${RESTY_OPENSSL_VERSION} \
				openresty-${RESTY_VERSION} \
				pcre-${RESTY_PCRE_VERSION}
	fi

	cd /tmp &&
		rm -rf \
			openssl-${RESTY_OPENSSL_VERSION}.tar.gz \
			openresty-${RESTY_VERSION}.tar.gz \
			pcre-${RESTY_PCRE_VERSION}.tar.gz \
			luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \
			luarocks-${RESTY_LUAROCKS_VERSION}

	yum autoremove -y
}
